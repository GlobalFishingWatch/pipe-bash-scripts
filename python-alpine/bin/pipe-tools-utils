#!/usr/bin/env ash
set -e

# On Alpine Linux, the 'date' command is different, so we use 'busybox date'
case "$OSTYPE" in
  darwin*)  DATE=gdate ;;
  *)        DATE=date ;;
esac


# valid_date str_date
#
# returns yyyy-mm-dd for any valid datetime representation
# and returns an error code for invalid dates
#
valid_date() {
    local d
    d=$(${DATE} +%Y-%m-%d -d "$1") || return $?
    echo "$d"
}

# date_range(from_date, to_date)
# return a list of dates from from_date to to_date, inclusive
#
# Usage
# for date in $(date_range 2015-01-01 2015-01-04); do
#    echo $date
# done
date_range() {
    local d
    local end

    d=$(valid_date "$1") || return $?
    end=$d
    if [ -n "$2" ]; then
        end=$(valid_date "$2") || return $?
    fi

    echo $d
    while [ "$d" '<' "$end" ]; do
      # Convert the input date to seconds since the epoch, add one day (86400 seconds),
      # and then convert it back to the ISO format
      d=$(date -u -d "${d}" +%s 2>/dev/null)
      if [ $? -eq 0 ]; then
          d=$((d + 86400))
          d=$(date -u -d "@${d}" +%Y-%m-%d)
          echo "$d"
      else
          echo "Error: Invalid date format or calculation." >&2
          exit 1
      fi
    done
}

# yyyymmdd(date)
# formats a date as YYYYMMDD
yyyymmdd() {
    echo $(${DATE} +%Y%m%d -d "$1")
}